<?php

/**
 * @file
 * Install, update, and uninstall functions for the path2ban module.
 */

/**
 * This function prevents us from needing to have the same configuration
 * repeated multiple times.
 */
function path2ban_get_default_paths_to_ban() {
  return file_get_contents(backdrop_get_path('module', 'path2ban') . '/path2ban_default_entries.config');
}

/**
 * Implements hook_install().
 */
function path2ban_install() {
  $config = config('path2ban.settings');
  $path2ban_list = $config->get('path2ban_list') ?: path2ban_get_default_paths_to_ban();
  $config->set('path2ban_list', $path2ban_list);
  $config->set('path2ban_banned_count', 0);
  $config->set('path2ban_banned_since', time());
  $config->set('path2ban_mode', Path2ban_SettingsManager::MODE_USE_MENU_CALLBACK);
  $config->save();
}

/**
 * Implements hook_enable().
 */
function path2ban_enable() {
  $config = config('path2ban.settings');
  if (Path2ban_SettingsManager::MODE_USE_MENU_CALLBACK == $config->get('path2ban_mode') ||
    NULL == $config->get('path2ban_mode')) {
    Path2ban_SettingsManager::switchToMenuCallbackMode();
  }
}

/**
 * Implements hook_disable().
 *
 * If the site_403 and site_404 pages have been overwritten, delete the entries.
 */
function path2ban_disable() {
  $site_config = config('system.core');
  if ('path2ban/403' == $site_config->get('site_403')) {
    $site_config->clear('site_403');
  }
  if ('path2ban/404' == $site_config->get('site_404')) {
    $site_config->clear('site_404');
  }
  $site_config->save();
}

/**
 * Implements hook_uninstall().
 */
function path2ban_uninstall() {
  config('path2ban.settings')->delete();
}
